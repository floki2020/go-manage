// Code generated by ent, DO NOT EDIT.

package user

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUserName holds the string denoting the user_name field in the database.
	FieldUserName = "user_name"
	// FieldPassword holds the string denoting the password field in the database.
	FieldPassword = "password"
	// FieldParentID holds the string denoting the parent_id field in the database.
	FieldParentID = "parent_id"
	// EdgePersonals holds the string denoting the personals edge name in mutations.
	EdgePersonals = "personals"
	// EdgeCompanys holds the string denoting the companys edge name in mutations.
	EdgeCompanys = "companys"
	// EdgeParent holds the string denoting the parent edge name in mutations.
	EdgeParent = "parent"
	// EdgeChildren holds the string denoting the children edge name in mutations.
	EdgeChildren = "children"
	// Table holds the table name of the user in the database.
	Table = "tb_user"
	// PersonalsTable is the table that holds the personals relation/edge.
	PersonalsTable = "tb_personal"
	// PersonalsInverseTable is the table name for the Personal entity.
	// It exists in this package in order to avoid circular dependency with the "personal" package.
	PersonalsInverseTable = "tb_personal"
	// PersonalsColumn is the table column denoting the personals relation/edge.
	PersonalsColumn = "user_id"
	// CompanysTable is the table that holds the companys relation/edge.
	CompanysTable = "tb_company"
	// CompanysInverseTable is the table name for the Company entity.
	// It exists in this package in order to avoid circular dependency with the "company" package.
	CompanysInverseTable = "tb_company"
	// CompanysColumn is the table column denoting the companys relation/edge.
	CompanysColumn = "user_id"
	// ParentTable is the table that holds the parent relation/edge.
	ParentTable = "tb_user"
	// ParentColumn is the table column denoting the parent relation/edge.
	ParentColumn = "parent_id"
	// ChildrenTable is the table that holds the children relation/edge.
	ChildrenTable = "tb_user"
	// ChildrenColumn is the table column denoting the children relation/edge.
	ChildrenColumn = "parent_id"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldUserName,
	FieldPassword,
	FieldParentID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
